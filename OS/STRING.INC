
	INCLUDE "FUNCTION.INC"

; GET THE LENGTH OF NULL TERMINATED STRING
STRLEN:
NUM_PARMS SET 1
	ENTER
	POP  H
	ORI  0FFH
	MOV  H,A
	MOV  L,A
STRLEN_1:
	LDAX D
	INX  D
	INX  H
	ANA  A
	JNZ  STRLEN_1
	EXIT

; COMPARE STRING1 TO STRING2
; RETURN Z = 1 IF STR1 == STR2
;        Z = 0, C = 1 IF STR1 < STR2
;        Z = 0, C = 0 IF STR1 > STR2
; STRCMP(STR1, STR2)
STRCMP:
NUM_PARMS SET 2
	ENTER
	POP  D
	POP  H
STRCMP_1:
	LDAX D
	ANA  A 			; IF NULL TERMINATOR, EXIT
	JZ   STRCMP_2
	CMP  M			; COMPARE TO STR2
	JNZ  STRCMP_2 	; IF NOT EQUAL, RETURN DIFF
	INX  D
	INX  H
	JMP  STRCMP_1	; OTHERWISE, GO TO NEXT CHAR
STRCMP_2:
	SUB  M 			; STR1 - STR2 TO SET Z AND C
	EXIT

; CONVERTS ALL UPPER CASE CHARS TO LOWERCASE INPLACE
TO_LOWER:
NUM_PARMS SET 1
	ENTER
	POP  H
TO_LOWER_1:
	MOV  A,M
	INX  H 			; MOVE TO NEXT CHAR
	CPI  '['		; POSSIBLE UPPERCASE?
	JM   TO_LOWER_2	; IF SO, CHECK IT
	JMP  TO_LOWER_1	; OTHERWISE, GO TO NEXT CHAR
TO_LOWER_2:
	CPI  'A'
	JM   TO_LOWER_3	; BELOW A -- MAY BE NULL TERMINATOR
	ADI  32 		; OTHERWISE, LOWERCASE IT
	JMP  TO_LOWER_1
TO_LOWER_3:
	ORA  A 			; = 0?
	JNZ  TO_LOWER_1	; IF NOT, CONTINUE
	EXIT  			; OTHERWISE, RETURN

; CHECKS IF A STRING CONTAINS A GIVEN CHAR
; CONTAINS(STRING, CHAR)
; RETURNS Z = 1 IF STRING CONTAINS CHAR
;         Z = 0 OTHERWISE
CONTAINS:
NUM_PARMS SET 2
	ENTER
	POP  H 			; POP STRING ADDRESS INTO HL
	POP  B 			; POP CHAR INTO C
CONTAINS_1:
	MOV  A,M 		; MOVE CHAR INTO A
	ANA  A 			; NULL TERMINATOR?
	JZ   CONTAINS_N ; YES, RETURN 0
	INX  H 			; MOVE TO NEXT CHAR
	CMP  C 			; CHECK IF EQUAL
	JNZ  CONTAINS_1 ; IF NOT EQUAL GO TO NEXT
	EXIT			; RETURN
CONTAINS_N:
	INR  A 			; INCREMENT A TO MAKE IT NON-ZERO
	EXIT 			; RETURN